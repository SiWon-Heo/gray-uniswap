/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Exchange, ExchangeInterface } from "../../contracts/Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ethSold",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    name: "EthPurchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ethSold",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokensBought",
        type: "uint256",
      },
    ],
    name: "TokenPurchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTokens",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minTokens",
        type: "uint256",
      },
    ],
    name: "ethToTokenSwap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minTokens",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "ethToTokenTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getOutputAmountWithFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReserve",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lpTokenAmount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minEth",
        type: "uint256",
      },
    ],
    name: "tokenToEthSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenSold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minTokenBought",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minEthBought",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "tokenToTokenSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d6d38038062002d6d83398181016040528101906200003791906200027a565b6040518060400160405280600f81526020017f4772617920556e697377617020563200000000000000000000000000000000008152506040518060400160405280600781526020017f47554e492d5632000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000160565b508060049080519060200190620000d492919062000160565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000311565b8280546200016e90620002db565b90600052602060002090601f016020900481019282620001925760008555620001de565b82601f10620001ad57805160ff1916838001178555620001de565b82800160010185558215620001de579182015b82811115620001dd578251825591602001919060010190620001c0565b5b509050620001ed9190620001f1565b5090565b5b808211156200020c576000816000905550600101620001f2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002428262000215565b9050919050565b620002548162000235565b81146200026057600080fd5b50565b600081519050620002748162000249565b92915050565b60006020828403121562000293576200029262000210565b5b6000620002a38482850162000263565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f457607f821691505b602082108114156200030b576200030a620002ac565b5b50919050565b612a4c80620003216000396000f3fe60806040526004361061011f5760003560e01c80635cf4ee91116100a0578063a9059cbb11610064578063a9059cbb14610405578063d3fdbbb514610442578063dd62ed3e1461047f578063e0486c8a146104bc578063f979dcd7146104e55761011f565b80635cf4ee91146102fa57806370a082311461033757806395d89b41146103745780639c8f9f231461039f578063a457c2d7146103c85761011f565b806337990981116100e7578063379909811461021f578063389d9a4014610248578063395093511461026457806351c6590a146102a1578063533a7b73146102bd5761011f565b806306fdde0314610124578063095ea7b31461014f57806318160ddd1461018c57806323b872dd146101b7578063313ce567146101f4575b600080fd5b34801561013057600080fd5b50610139610501565b6040516101469190611d25565b60405180910390f35b34801561015b57600080fd5b5061017660048036038101906101719190611de0565b610593565b6040516101839190611e3b565b60405180910390f35b34801561019857600080fd5b506101a16105b6565b6040516101ae9190611e65565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190611e80565b6105c0565b6040516101eb9190611e3b565b60405180910390f35b34801561020057600080fd5b506102096105ef565b6040516102169190611eef565b60405180910390f35b34801561022b57600080fd5b5061024660048036038101906102419190611f0a565b6105f8565b005b610262600480360381019061025d9190611f71565b6108cb565b005b34801561027057600080fd5b5061028b60048036038101906102869190611de0565b6108d9565b6040516102989190611e3b565b60405180910390f35b6102bb60048036038101906102b69190611fb1565b610910565b005b3480156102c957600080fd5b506102e460048036038101906102df9190611fde565b610bb9565b6040516102f19190611e65565b60405180910390f35b34801561030657600080fd5b50610321600480360381019061031c9190612031565b610c0f565b60405161032e9190611e65565b60405180910390f35b34801561034357600080fd5b5061035e60048036038101906103599190612071565b610c30565b60405161036b9190611e65565b60405180910390f35b34801561038057600080fd5b50610389610c78565b6040516103969190611d25565b60405180910390f35b3480156103ab57600080fd5b506103c660048036038101906103c19190611fb1565b610d0a565b005b3480156103d457600080fd5b506103ef60048036038101906103ea9190611de0565b610f0a565b6040516103fc9190611e3b565b60405180910390f35b34801561041157600080fd5b5061042c60048036038101906104279190611de0565b610f81565b6040516104399190611e3b565b60405180910390f35b34801561044e57600080fd5b5061046960048036038101906104649190611fde565b610fa4565b6040516104769190611e65565b60405180910390f35b34801561048b57600080fd5b506104a660048036038101906104a1919061209e565b610fdc565b6040516104b39190611e65565b60405180910390f35b3480156104c857600080fd5b506104e360048036038101906104de9190612031565b611063565b005b6104ff60048036038101906104fa9190611fb1565b61125d565b005b6060600380546105109061210d565b80601f016020809104026020016040519081016040528092919081815260200182805461053c9061210d565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b5050505050905090565b60008061059e61126a565b90506105ab818585611272565b600191505092915050565b6000600254905090565b6000806105cb61126a565b90506105d885828561143d565b6105e38585856114c9565b60019150509392505050565b60006012905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b8152600401610655919061214e565b60206040518083038186803b15801561066d57600080fd5b505afa158015610681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a5919061217e565b9050600061075e86600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610708919061214e565b60206040518083038186803b15801561072057600080fd5b505afa158015610734573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075891906121c0565b47610bb9565b9050838110156107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079a90612239565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161080293929190612259565b602060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085491906122bc565b508173ffffffffffffffffffffffffffffffffffffffff1663389d9a408287336040518463ffffffff1660e01b81526004016108919291906122e9565b6000604051808303818588803b1580156108aa57600080fd5b505af11580156108be573d6000803e3d6000fd5b5050505050505050505050565b6108d5828261174a565b5050565b6000806108e461126a565b90506109058185856108f68589610fdc565b6109009190612341565b611272565b600191505092915050565b600061091a6105b6565b90506000811115610aec57600034476109339190612397565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610992919061214e565b60206040518083038186803b1580156109aa57600080fd5b505afa1580156109be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e291906121c0565b905060008282346109f391906123cb565b6109fd9190612454565b905080851015610a0c57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a6b93929190612259565b602060405180830381600087803b158015610a8557600080fd5b505af1158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd91906122bc565b506000833486610acd91906123cb565b610ad79190612454565b9050610ae3338261194b565b50505050610bb5565b60008290506000479050610b00338261194b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b5f93929190612259565b602060405180830381600087803b158015610b7957600080fd5b505af1158015610b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb191906122bc565b5050505b5050565b600080606385610bc991906123cb565b905060008184610bd991906123cb565b9050600082606487610beb91906123cb565b610bf59190612341565b90508082610c039190612454565b93505050509392505050565b60008083905060008390508082610c269190612454565b9250505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610c879061210d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb39061210d565b8015610d005780601f10610cd557610100808354040283529160200191610d00565b820191906000526020600020905b815481529060010190602001808311610ce357829003601f168201915b5050505050905090565b60008111610d1757600080fd5b6000610d216105b6565b90506000814784610d3291906123cb565b610d3c9190612454565b9050600082600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d9c919061214e565b60206040518083038186803b158015610db457600080fd5b505afa158015610dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dec91906121c0565b85610df791906123cb565b610e019190612454565b9050610e0d3385611aab565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610e53573d6000803e3d6000fd5b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610eb1929190612485565b602060405180830381600087803b158015610ecb57600080fd5b505af1158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0391906122bc565b5050505050565b600080610f1561126a565b90506000610f238286610fdc565b905083811015610f68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5f90612520565b60405180910390fd5b610f758286868403611272565b60019250505092915050565b600080610f8c61126a565b9050610f998185856114c9565b600191505092915050565b6000808483610fb391906123cb565b905060008585610fc39190612341565b90508082610fd19190612454565b925050509392505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061111a83600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110c4919061214e565b60206040518083038186803b1580156110dc57600080fd5b505afa1580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111491906121c0565b47610fa4565b90508181101561115f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115690612239565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016111be93929190612259565b602060405180830381600087803b1580156111d857600080fd5b505af11580156111ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121091906122bc565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611257573d6000803e3d6000fd5b50505050565b611267813361174a565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d9906125b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611352576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134990612644565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114309190611e65565b60405180910390a3505050565b60006114498484610fdc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114c357818110156114b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ac906126b0565b60405180910390fd5b6114c28484848403611272565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153090612742565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a0906127d4565b60405180910390fd5b6115b4838383611c82565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561163a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163190612866565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116cd9190612341565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117319190611e65565b60405180910390a3611744848484611c87565b50505050565b600061180c34344761175c9190612397565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117b7919061214e565b60206040518083038186803b1580156117cf57600080fd5b505afa1580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180791906121c0565b610bb9565b905082811015611851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184890612239565b60405180910390fd5b80348373ffffffffffffffffffffffffffffffffffffffff167fcd60aa75dea3072fbc07ae6d7d856b5dc5f4eee88854f5b4abf7b680ef8bc50f60405160405180910390a4600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016118f3929190612485565b602060405180830381600087803b15801561190d57600080fd5b505af1158015611921573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194591906122bc565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b2906128d2565b60405180910390fd5b6119c760008383611c82565b80600260008282546119d99190612341565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a2e9190612341565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a939190611e65565b60405180910390a3611aa760008383611c87565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1290612964565b60405180910390fd5b611b2782600083611c82565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba4906129f6565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611c049190612397565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c699190611e65565b60405180910390a3611c7d83600084611c87565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cc6578082015181840152602081019050611cab565b83811115611cd5576000848401525b50505050565b6000601f19601f8301169050919050565b6000611cf782611c8c565b611d018185611c97565b9350611d11818560208601611ca8565b611d1a81611cdb565b840191505092915050565b60006020820190508181036000830152611d3f8184611cec565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d7782611d4c565b9050919050565b611d8781611d6c565b8114611d9257600080fd5b50565b600081359050611da481611d7e565b92915050565b6000819050919050565b611dbd81611daa565b8114611dc857600080fd5b50565b600081359050611dda81611db4565b92915050565b60008060408385031215611df757611df6611d47565b5b6000611e0585828601611d95565b9250506020611e1685828601611dcb565b9150509250929050565b60008115159050919050565b611e3581611e20565b82525050565b6000602082019050611e506000830184611e2c565b92915050565b611e5f81611daa565b82525050565b6000602082019050611e7a6000830184611e56565b92915050565b600080600060608486031215611e9957611e98611d47565b5b6000611ea786828701611d95565b9350506020611eb886828701611d95565b9250506040611ec986828701611dcb565b9150509250925092565b600060ff82169050919050565b611ee981611ed3565b82525050565b6000602082019050611f046000830184611ee0565b92915050565b60008060008060808587031215611f2457611f23611d47565b5b6000611f3287828801611dcb565b9450506020611f4387828801611dcb565b9350506040611f5487828801611dcb565b9250506060611f6587828801611d95565b91505092959194509250565b60008060408385031215611f8857611f87611d47565b5b6000611f9685828601611dcb565b9250506020611fa785828601611d95565b9150509250929050565b600060208284031215611fc757611fc6611d47565b5b6000611fd584828501611dcb565b91505092915050565b600080600060608486031215611ff757611ff6611d47565b5b600061200586828701611dcb565b935050602061201686828701611dcb565b925050604061202786828701611dcb565b9150509250925092565b6000806040838503121561204857612047611d47565b5b600061205685828601611dcb565b925050602061206785828601611dcb565b9150509250929050565b60006020828403121561208757612086611d47565b5b600061209584828501611d95565b91505092915050565b600080604083850312156120b5576120b4611d47565b5b60006120c385828601611d95565b92505060206120d485828601611d95565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061212557607f821691505b60208210811415612139576121386120de565b5b50919050565b61214881611d6c565b82525050565b6000602082019050612163600083018461213f565b92915050565b60008151905061217881611d7e565b92915050565b60006020828403121561219457612193611d47565b5b60006121a284828501612169565b91505092915050565b6000815190506121ba81611db4565b92915050565b6000602082840312156121d6576121d5611d47565b5b60006121e4848285016121ab565b91505092915050565b7f496e73756666696369656e74206f757470757420416d6f756e74000000000000600082015250565b6000612223601a83611c97565b915061222e826121ed565b602082019050919050565b6000602082019050818103600083015261225281612216565b9050919050565b600060608201905061226e600083018661213f565b61227b602083018561213f565b6122886040830184611e56565b949350505050565b61229981611e20565b81146122a457600080fd5b50565b6000815190506122b681612290565b92915050565b6000602082840312156122d2576122d1611d47565b5b60006122e0848285016122a7565b91505092915050565b60006040820190506122fe6000830185611e56565b61230b602083018461213f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061234c82611daa565b915061235783611daa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561238c5761238b612312565b5b828201905092915050565b60006123a282611daa565b91506123ad83611daa565b9250828210156123c0576123bf612312565b5b828203905092915050565b60006123d682611daa565b91506123e183611daa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561241a57612419612312565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061245f82611daa565b915061246a83611daa565b92508261247a57612479612425565b5b828204905092915050565b600060408201905061249a600083018561213f565b6124a76020830184611e56565b9392505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061250a602583611c97565b9150612515826124ae565b604082019050919050565b60006020820190508181036000830152612539816124fd565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061259c602483611c97565b91506125a782612540565b604082019050919050565b600060208201905081810360008301526125cb8161258f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061262e602283611c97565b9150612639826125d2565b604082019050919050565b6000602082019050818103600083015261265d81612621565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061269a601d83611c97565b91506126a582612664565b602082019050919050565b600060208201905081810360008301526126c98161268d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061272c602583611c97565b9150612737826126d0565b604082019050919050565b6000602082019050818103600083015261275b8161271f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006127be602383611c97565b91506127c982612762565b604082019050919050565b600060208201905081810360008301526127ed816127b1565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612850602683611c97565b915061285b826127f4565b604082019050919050565b6000602082019050818103600083015261287f81612843565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006128bc601f83611c97565b91506128c782612886565b602082019050919050565b600060208201905081810360008301526128eb816128af565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061294e602183611c97565b9150612959826128f2565b604082019050919050565b6000602082019050818103600083015261297d81612941565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006129e0602283611c97565b91506129eb82612984565b604082019050919050565b60006020820190508181036000830152612a0f816129d3565b905091905056fea2646970667358221220964ffe87e5c7e6d4295cf9f17a8e894fc7f11883ffd71b04f3e4b80ee99023f964736f6c63430008090033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exchange> {
    return super.deploy(_token, overrides || {}) as Promise<Exchange>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  override connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
